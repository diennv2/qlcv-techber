import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:get/get.dart';import 'package:mobile_rhm/app_widgets/button/app_solid_button.dart';import 'package:mobile_rhm/app_widgets/image_display.dart';import 'package:mobile_rhm/core/languages/keys.dart';import 'package:mobile_rhm/core/theme/text_theme.dart';import 'package:mobile_rhm/core/utils/log_utils.dart';import 'package:mobile_rhm/core/values/assets.dart';import 'package:mobile_rhm/core/values/colors.dart';import 'package:touchable_opacity/touchable_opacity.dart';class DateTimePicker2 extends StatelessWidget {  final Function(DateTime) onSelect;  final DateTime? initDate;  final String title;  DateTimePicker2({    Key? key,    required this.onSelect,    this.initDate,    required this.title,  }) : super(key: key);  DateTime? selectedDate;  Future<void> _selectTime(BuildContext context) async {    TimeOfDay initialTime = TimeOfDay.fromDateTime(selectedDate ?? DateTime.now());    TimeOfDay? pickedTime = await showTimePicker(      context: context,      initialTime: initialTime,    );    if (pickedTime != null) {      selectedDate = DateTime(        selectedDate!.year,        selectedDate!.month,        selectedDate!.day,        pickedTime.hour,        pickedTime.minute,      );    }  }  @override  Widget build(BuildContext context) {    DateTime date = initDate ?? DateTime.now();    DateTime minDate = DateTime(DateTime.now().year - 1);    DateTime maxDate = DateTime(DateTime.now().year + 5);    selectedDate = date;    Widget datePick = CupertinoDatePicker(      initialDateTime: date,      minimumDate: minDate,      maximumDate: maxDate,      mode: CupertinoDatePickerMode.date,      use24hFormat: true,      onDateTimeChanged: (DateTime newDate) {        selectedDate = DateTime(          newDate.year,          newDate.month,          newDate.day,          selectedDate?.hour ?? 0,          selectedDate?.minute ?? 0,        );      },      dateOrder: DatePickerDateOrder.dmy,    );    return Container(      decoration: BoxDecoration(        borderRadius: BorderRadius.only(          topLeft: Radius.circular(24.w),          topRight: Radius.circular(24.w),        ),        color: AppColors.White,      ),      child: Column(        mainAxisSize: MainAxisSize.min,        children: [          Container(            height: 56.h,            padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 12.h),            child: Row(              children: [                TouchableOpacity(                  onTap: () {                    Get.back();                  },                  child: ImageDisplay(                    Assets.ic_close,                    width: 40.w,                  ),                ),                Expanded(                  child: Text(                    title,                    style: AppTextStyle.title,                    textAlign: TextAlign.center,                  ),                ),                Container(                  width: 40.w,                ),              ],            ),          ),          SizedBox(height: 300.h, child: datePick),          Container(            margin: EdgeInsets.symmetric(vertical: 20.h, horizontal: 20.w),            child: AppSolidButton(              text: AppStrings.btn_ok.tr,              isDisable: false,              onPress: () async {                await _selectTime(context); // Prompt user to select time                Get.back();                if (selectedDate != null) {                  onSelect(selectedDate!);                }              },            ),          ),        ],      ),    );  }}